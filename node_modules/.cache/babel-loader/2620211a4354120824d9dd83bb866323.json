{"ast":null,"code":"var _jsxFileName = \"C:\\\\REACT\\\\my-app\\\\src\\\\pages\\\\CardGame.js\";\nimport React, { useState, useEffect } from \"react\";\nimport Auth from \"../middleware/Auth\";\n\nfunction CardGame() {\n  const images = [\"https://images.unsplash.com/photo-1592421817004-876c579a18e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1051&q=80\", \"https://images.unsplash.com/photo-1592436259366-18ab6da5f195?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80\", \"https://images.unsplash.com/photo-1592407928465-e557fbbf4ff9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80\", \"https://images.unsplash.com/photo-1592565277104-7b50f3396105?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\"];\n  const [cardImages, setcardImages] = useState([]);\n  useEffect(() => {\n    setcardImages(images.concat(images).sort(() => 0.5 - Math.random()).map(image => {\n      return {\n        src: image,\n        isShowing: false,\n        isMatched: false,\n        id: Math.floor(Math.random() * 10000)\n      };\n    }));\n  }, []);\n  const [flippedCards, setflippedCards] = useState([]);\n\n  function flip(imageId) {\n    setcardImages(cardImages.map(image => {\n      if (image.id === imageId) {\n        image.isShowing = true;\n        setflippedCards([...flippedCards, image]);\n      }\n\n      return image;\n    }));\n  }\n\n  useEffect(() => {\n    if (flippedCards.length > 2) {\n      setcardImages(cardImages.map(image => {\n        if (image.src === flippedCards[0].src || image.src === flippedCards[0].src) {\n          if (flippedCards[0].src === flippedCards[1].src) {\n            image.isMatched = true;\n          } else {\n            image.isShowing = false;\n          }\n        } else {\n          image.isShowing = false;\n        }\n\n        return image;\n      }));\n      setflippedCards([]);\n    }\n  }, [flippedCards]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-wrap justify-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, cardImages.map((image, i) => /*#__PURE__*/React.createElement(Card, {\n    image: image,\n    key: i,\n    flip: flip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  }))));\n}\n\nfunction Card({\n  image,\n  flip\n}) {\n  const jokerLink = \"https://specials-images.forbesimg.com/imageserve/5dae0ad2c538200007810d63/960x0.jpg?fit=scale\";\n\n  function handleFlip() {\n    if (image.isMatched) return;\n    flip(image.id);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-1/4 my-2\",\n    onClick: handleFlip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }, image.isMatched ? /*#__PURE__*/React.createElement(\"img\", {\n    src: image.src,\n    width: \"200\",\n    className: \"h-64 opacity-25\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }) : image.isShowing ? /*#__PURE__*/React.createElement(\"img\", {\n    src: image.src,\n    width: \"200\",\n    className: \"h-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(\"img\", {\n    src: jokerLink,\n    width: \"200\",\n    className: \"h-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Auth(CardGame);","map":{"version":3,"sources":["C:/REACT/my-app/src/pages/CardGame.js"],"names":["React","useState","useEffect","Auth","CardGame","images","cardImages","setcardImages","concat","sort","Math","random","map","image","src","isShowing","isMatched","id","floor","flippedCards","setflippedCards","flip","imageId","length","i","Card","jokerLink","handleFlip"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Auth from \"../middleware/Auth\";\r\n\r\nfunction CardGame() {\r\n  const images = [\r\n    \"https://images.unsplash.com/photo-1592421817004-876c579a18e2?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1051&q=80\",\r\n    \"https://images.unsplash.com/photo-1592436259366-18ab6da5f195?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80\",\r\n    \"https://images.unsplash.com/photo-1592407928465-e557fbbf4ff9?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80\",\r\n    \"https://images.unsplash.com/photo-1592565277104-7b50f3396105?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80\",\r\n  ];\r\n\r\n  const [cardImages, setcardImages] = useState([]);\r\n  useEffect(() => {\r\n    setcardImages(\r\n      images\r\n        .concat(images)\r\n        .sort(() => 0.5 - Math.random())\r\n        .map((image) => {\r\n          return {\r\n            src: image,\r\n            isShowing: false,\r\n            isMatched: false,\r\n            id: Math.floor(Math.random() * 10000),\r\n          };\r\n        })\r\n    );\r\n  }, []);\r\n\r\n  const [flippedCards, setflippedCards] = useState([]);\r\n\r\n  function flip(imageId) {\r\n    setcardImages(\r\n      cardImages.map((image) => {\r\n        if (image.id === imageId) {\r\n          image.isShowing = true;\r\n          setflippedCards([...flippedCards, image]);\r\n        }\r\n        return image;\r\n      })\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (flippedCards.length > 2) {\r\n      setcardImages(\r\n        cardImages.map((image) => {\r\n          if (\r\n            image.src === flippedCards[0].src ||\r\n            image.src === flippedCards[0].src\r\n          ) {\r\n            if (flippedCards[0].src === flippedCards[1].src) {\r\n              image.isMatched = true;\r\n            } else {\r\n              image.isShowing = false;\r\n            }\r\n          } else {\r\n            image.isShowing = false;\r\n          }\r\n          return image;\r\n        })\r\n      );\r\n      setflippedCards([]);\r\n    }\r\n  }, [flippedCards]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"flex flex-wrap justify-between\">\r\n        {cardImages.map((image, i) => (\r\n          <Card image={image} key={i} flip={flip} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Card({ image, flip }) {\r\n  const jokerLink =\r\n    \"https://specials-images.forbesimg.com/imageserve/5dae0ad2c538200007810d63/960x0.jpg?fit=scale\";\r\n\r\n  function handleFlip() {\r\n    if (image.isMatched) return;\r\n    flip(image.id);\r\n  }\r\n\r\n  return (\r\n    <div className=\"w-1/4 my-2\" onClick={handleFlip}>\r\n      {image.isMatched ? (\r\n        <img src={image.src} width=\"200\" className=\"h-64 opacity-25\" />\r\n      ) : image.isShowing ? (\r\n        <img src={image.src} width=\"200\" className=\"h-64\" />\r\n      ) : (\r\n        <img src={jokerLink} width=\"200\" className=\"h-64\" />\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Auth(CardGame);"]},"metadata":{},"sourceType":"module"}